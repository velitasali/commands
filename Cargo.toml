[package]
name = "commands"
version = "0.1.0"
authors = ["Veli TasalÄ± <me@velitasali.com>"]
description = "A personal website working in a CLI fashion"
license = "MIT License"
edition = "2021"
repository = "https://github.com/velitasali/commands.git"

[lib]
name = "commands"
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
clap = { version = "3.1.18", features = ["derive"] }
wasm-bindgen = "0.2.80"
js-sys = "0.3.57"
web-sys = { version = "0.3.57", features = [
    "CanvasRenderingContext2d",
    "console",
    "Document",
    "DomRectList",
    "Element",
    "EventTarget",
    "HtmlCanvasElement",
    "HtmlElement",
    "HtmlInputElement",
    "InputEvent",
    "KeyEvent",
    "KeyboardEvent",
    "Node",
    "CssStyleDeclaration",
    "TextMetrics",
    "WheelEvent",
    "Window",
] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

lazy_static = "1.4.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.30"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
